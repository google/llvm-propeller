# REQUIRES: lld

# Make sure DWARF v4 type units work.
# RUN: %clangxx -target x86_64-pc-linux %S/Inputs/debug-types-basic.cpp \
# RUN:   -g -gdwarf-4 -fdebug-types-section -c -o %t.o
# RUN: ld.lld %t.o -o %t
# RUN: %lldb %t -s %s -o exit | FileCheck %s

# Now do the same for DWARF v5.
# RUN: %clangxx -target x86_64-pc-linux %S/Inputs/debug-types-basic.cpp \
# RUN:   -g -gdwarf-5 -fdebug-types-section -c -o %t.o
# RUN: ld.lld %t.o -o %t
# RUN: %lldb %t -s %s -o exit | FileCheck %s

type lookup A
# CHECK-LABEL: type lookup A
# CHECK:      struct A {
# CHECK-NEXT:   int i;
# CHECK-NEXT:   long l;
# CHECK-NEXT:   float f;
# CHECK-NEXT:   double d;
# CHECK-NEXT: }

type lookup E
# CHECK-LABEL: type lookup E
# CHECK:      enum E {
# CHECK-NEXT:   e1,
# CHECK-NEXT:   e2,
# CHECK-NEXT:   e3
# CHECK-NEXT: }

type lookup EC
# CHECK-LABEL: type lookup EC
# CHECK:      enum class EC {
# CHECK-NEXT:   e1,
# CHECK-NEXT:   e2,
# CHECK-NEXT:   e3
# CHECK-NEXT: }

print (E) 1
# CHECK-LABEL: print (E) 1
# CHECK: (E) $0 = e2

print (EC) 1
# CHECK-LABEL: print (EC) 1
# CHECK: (EC) $1 = e2
