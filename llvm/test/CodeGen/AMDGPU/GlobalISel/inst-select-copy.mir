# NOTE: Assertions have been autogenerated by utils/update_mir_test_checks.py
# RUN: llc -march=amdgcn -run-pass=instruction-select -verify-machineinstrs -global-isel %s -o - | FileCheck %s -check-prefixes=GCN

---

name:            copy
legalized:       true
regBankSelected: true


body: |
  bb.0:
    liveins: $sgpr2_sgpr3
    ; GCN-LABEL: name: copy
    ; GCN: [[COPY:%[0-9]+]]:sreg_64_xexec = COPY $sgpr2_sgpr3
    ; GCN: [[COPY1:%[0-9]+]]:vreg_64 = COPY [[COPY]]
    ; GCN: [[DEF:%[0-9]+]]:vgpr_32 = IMPLICIT_DEF
    ; GCN: FLAT_STORE_DWORD [[COPY1]], [[DEF]], 0, 0, 0, 0, implicit $exec, implicit $flat_scr
    %0:sgpr(p1) = COPY $sgpr2_sgpr3
    %1:vgpr(p1) = COPY %0
    %2:vgpr(s32) = G_IMPLICIT_DEF
    G_STORE %2, %1 :: (store 4, addrspace 1)
...
---

name:            copy_vcc_scc
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $vgpr2, $vgpr3, $scc
    ; GCN-LABEL: name: copy_vcc_scc
    ; GCN: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; GCN: [[COPY1:%[0-9]+]]:vgpr_32 = COPY $vgpr2
    ; GCN: [[COPY2:%[0-9]+]]:vgpr_32 = COPY $vgpr3
    ; GCN: [[COPY3:%[0-9]+]]:sreg_32_xm0 = COPY $scc
    ; GCN: [[V_CMP_NE_U32_e64_:%[0-9]+]]:sreg_64_xexec = V_CMP_NE_U32_e64 0, [[COPY3]], implicit $exec
    ; GCN: [[V_CNDMASK_B32_e64_:%[0-9]+]]:vgpr_32 = V_CNDMASK_B32_e64 0, [[COPY2]], 0, [[COPY1]], [[V_CMP_NE_U32_e64_]], implicit $exec
    ; GCN: FLAT_STORE_DWORD [[COPY]], [[V_CNDMASK_B32_e64_]], 0, 0, 0, 0, implicit $exec, implicit $flat_scr
    %0:vgpr(p1) = COPY $vgpr0_vgpr1
    %1:vgpr(s32) = COPY $vgpr2
    %2:vgpr(s32) = COPY $vgpr3
    %3:scc(s1) = COPY $scc
    %4:vcc(s1) = COPY %3
    %5:vgpr(s32) = G_SELECT %4, %1, %2
    G_STORE %5, %0 :: (store 4, addrspace 1)
...
---

name:            copy_vcc_scc_2_uses
legalized:       true
regBankSelected: true

body: |
  bb.0:
    liveins: $vgpr0_vgpr1, $vgpr2, $vgpr3, $scc
    ; GCN-LABEL: name: copy_vcc_scc_2_uses
    ; GCN: [[COPY:%[0-9]+]]:vreg_64 = COPY $vgpr0_vgpr1
    ; GCN: [[COPY1:%[0-9]+]]:vgpr_32 = COPY $vgpr2
    ; GCN: [[COPY2:%[0-9]+]]:vgpr_32 = COPY $vgpr3
    ; GCN: [[COPY3:%[0-9]+]]:sreg_32_xm0 = COPY $scc
    ; GCN: [[V_CMP_NE_U32_e64_:%[0-9]+]]:sreg_64_xexec = V_CMP_NE_U32_e64 0, [[COPY3]], implicit $exec
    ; GCN: [[V_CNDMASK_B32_e64_:%[0-9]+]]:vgpr_32 = V_CNDMASK_B32_e64 0, [[COPY2]], 0, [[COPY1]], [[V_CMP_NE_U32_e64_]], implicit $exec
    ; GCN: [[V_CMP_NE_U32_e64_1:%[0-9]+]]:sreg_64_xexec = V_CMP_NE_U32_e64 0, [[COPY3]], implicit $exec
    ; GCN: [[V_CNDMASK_B32_e64_1:%[0-9]+]]:vgpr_32 = V_CNDMASK_B32_e64 0, [[V_CNDMASK_B32_e64_]], 0, [[COPY1]], [[V_CMP_NE_U32_e64_1]], implicit $exec
    ; GCN: FLAT_STORE_DWORD [[COPY]], [[V_CNDMASK_B32_e64_1]], 0, 0, 0, 0, implicit $exec, implicit $flat_scr
    %0:vgpr(p1) = COPY $vgpr0_vgpr1
    %1:vgpr(s32) = COPY $vgpr2
    %2:vgpr(s32) = COPY $vgpr3
    %3:scc(s1) = COPY $scc
    %4:vcc(s1) = COPY %3
    %5:vgpr(s32) = G_SELECT %4, %1, %2
    %6:vcc(s1) = COPY %3
    %7:vgpr(s32) = G_SELECT %6, %1, %5
    G_STORE %7, %0 :: (store 4, addrspace 1)
...
---
